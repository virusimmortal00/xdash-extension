const n="https://www.google-analytics.com/mp/collect",a="https://www.google-analytics.com/debug/mp/collect",o="G-MK76Z35GVB",r="hlO6ouhqRxOxVyWkEk8eQw";class c{constructor(e=!1){this.debug=e}async getOrCreateClientId(){const{clientId:e}=await chrome.storage.local.get("clientId");if(!e){const t=self.crypto.randomUUID();return await chrome.storage.local.set({clientId:t}),t}return e}async getOrCreateSessionId(){let e=await chrome.storage.session.get("sessionData");const t=Date.now();if(e&&e.sessionData&&e.sessionData.timestamp&&((t-parseInt(e.sessionData.timestamp))/6e4>30?e.sessionData=void 0:(e.sessionData.timestamp=t.toString(),await chrome.storage.session.set({sessionData:e.sessionData}))),!e||!e.sessionData){const s={session_id:t.toString(),timestamp:t.toString()};return await chrome.storage.session.set({sessionData:s}),s.session_id}return e.sessionData.session_id}async fireEvent(e,t={}){t.session_id||(t.session_id=await this.getOrCreateSessionId()),t.engagement_time_msec||(t.engagement_time_msec=100);try{const s=await fetch(`${this.debug?a:n}?measurement_id=${o}&api_secret=${r}`,{method:"POST",body:JSON.stringify({client_id:await this.getOrCreateClientId(),events:[{name:e,params:t}]})});this.debug&&console.log(await s.text())}catch(s){console.error("Google Analytics request failed with an exception",s)}}async firePageViewEvent(e,t,s={}){return this.fireEvent("page_view",{page_title:e,page_location:t,...s})}async fireErrorEvent(e,t={}){return this.fireEvent("extension_error",{...e,...t})}}class l{constructor(){this.analytics=new c}async firePageViewEvent(e,t,s={}){await this.analytics.firePageViewEvent(e,t,s)}async fireEvent(e,t={}){await this.analytics.fireEvent(e,t)}async fireErrorEvent(e,t={}){await this.analytics.fireErrorEvent(e,t)}}export{l as A};
